
plugins {}

//A gradle-like dependency management equivalent
project.ext.setProperty("libraries", [
        'groovy-all':[group:'org.codehaus.groovy', name:'groovy-all', version:'2.5.11'],
        'spock':[group:'org.spockframework', name:'spock-core', version:'1.3-groovy-2.5'],
        'junit4':[group:'junit', name:'junit', version:'4.13']
])

repositories {
    //Add repos unique to this container project
}

dependencies {
    //Add dependencies unique to this container project
}

allprojects {
    apply plugin: 'java'

    group = 'org.clinicalontology'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        withJavadocJar()
        withSourcesJar()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'

    project.ext.setProperty("libraries", rootProject.ext.libraries)

    repositories {
        mavenCentral()
    }

    dependencies {
        // For Spock testing
        testImplementation project.ext.libraries.'groovy-all'
        testImplementation project.ext.libraries.'spock'
        testImplementation project.ext.libraries.'junit4'
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                groupId = 'org.clinicalontology'
                version = '0.0.1-SNAPSHOT'
                pom {
                    packaging = 'jar'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'cnanjo'
                            name = 'Claude Nanjo'
                            email = 'cnanjo@example.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/ClinicalOntology/clinical-ontology-common-lib.git'
                        developerConnection = 'scm:git:https://github.com/ClinicalOntology/clinical-ontology-common-lib.git'
                        url = 'https://github.com/ClinicalOntology/clinical-ontology-common-lib'
                    }
                }
            }
        }
        repositories {
            maven {
                credentials {
                    username project.property('ossrh.username')
                    password project.property('ossrh.password')
                }
                // change URLs to point to your repos, e.g. http://my.org/repo
                def releasesRepoUrl = "TBD"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }

    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}